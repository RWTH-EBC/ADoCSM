#1
char Aclass(3,32)
Adymosim
1.4
Final state generated by Dymosim


#    Experiment parameters
double experiment(7,1)
       1                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
       2                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
  9.9999999999999995E-07   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
  2.0000000000000000E-14   # teps     Bound to check, if 2 equal time instants
  1.0000000000000000E-10   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
  9.9999999999999995E-07   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(196,72)
_dummy
_derdummy
y.height
y.duration
y.offset
y.startTime
y.y
sou.nPorts
sou.verifyInputs
sou.ports[1].m_flow
sou.ports[1].p
sou.ports[1].h_outflow
sou.ports[2].m_flow
sou.ports[3].m_flow
sou.flowDirection
sou.X_in_internal[1]
sou.use_p_in
sou.p
sou.use_T_in
sou.T
sou.use_X_in
sou.use_Xi_in
sou.use_C_in
sou.X[1]
sin.nPorts
sin.verifyInputs
sin.ports[1].h_outflow
sin.flowDirection
sin.X_in_internal[1]
sin.use_p_in
sin.p
sin.use_T_in
sin.T
sin.use_X_in
sin.use_Xi_in
sin.use_C_in
sin.X[1]
valInd.allowFlowReversal
valInd.m_flow_nominal
valInd.m_flow_small
valInd.show_T
valInd.dp
valInd._m_flow_start
valInd._dp_start
valInd.from_dp
valInd.dp_nominal
valInd.homotopyInitialization
valInd.linearized
valInd.m_flow_turbulent
valInd.sta_default.p
valInd.sta_default.T
valInd.eta_default
valInd.m_flow_nominal_pos
valInd.dp_nominal_pos
_GlobalScope.Modelica.Media.Interfaces.PartialPureSubstance.X_default[1]
valInd.CvData
valInd.Kv
valInd.Cv
valInd.Av
valInd.deltaM
valInd.dpValve_nominal
valInd.rhoStd
valInd.Kv_SI
valInd.use_inputFilter
valInd.riseTime
valInd.order
valInd.init
valInd.y_start
valInd.dpFixed_nominal
valInd.l
valInd.phi
valInd.kFixed
valInd.l2
valInd.deltax
valInd.coeff1
valInd.coeff2
valInd.y2dd
valInd.dp_min
valInd.dp_x
valInd.dp_x1
valInd.dp_y2
valInd.dp_y1
valInd.m_flow_x
valInd.m_flow_x1
valInd.m_flow_x2
valInd.m_flow_y2
valInd.m_flow_y1
valInd.m_flow_smooth
valInd.dp_smooth
dp.height
dp.duration
dp.offset
dp.startTime
valIndDpFix.allowFlowReversal
valIndDpFix.m_flow_nominal
valIndDpFix.m_flow_small
valIndDpFix.show_T
valIndDpFix.dp
valIndDpFix._m_flow_start
valIndDpFix._dp_start
valIndDpFix.from_dp
valIndDpFix.dp_nominal
valIndDpFix.homotopyInitialization
valIndDpFix.linearized
valIndDpFix.m_flow_turbulent
valIndDpFix.sta_default.p
valIndDpFix.sta_default.T
valIndDpFix.eta_default
valIndDpFix.m_flow_nominal_pos
valIndDpFix.dp_nominal_pos
valIndDpFix.CvData
valIndDpFix.Kv
valIndDpFix.Cv
valIndDpFix.Av
valIndDpFix.deltaM
valIndDpFix.dpValve_nominal
valIndDpFix.rhoStd
valIndDpFix.Kv_SI
valIndDpFix.use_inputFilter
valIndDpFix.riseTime
valIndDpFix.order
valIndDpFix.init
valIndDpFix.y_start
valIndDpFix.dpFixed_nominal
valIndDpFix.l
valIndDpFix.phi
valIndDpFix.kFixed
valIndDpFix.k
valIndDpFix.l2
valIndDpFix.deltax
valIndDpFix.coeff1
valIndDpFix.coeff2
valIndDpFix.y2dd
valIndDpFix.dp_min
valIndDpFix.dp_x
valIndDpFix.dp_x1
valIndDpFix.dp_y2
valIndDpFix.dp_y1
valIndDpFix.m_flow_x
valIndDpFix.m_flow_x1
valIndDpFix.m_flow_x2
valIndDpFix.m_flow_y2
valIndDpFix.m_flow_y1
valIndDpFix.m_flow_smooth
valIndDpFix.dp_smooth
valIndFromMflow.allowFlowReversal
valIndFromMflow.m_flow_nominal
valIndFromMflow.m_flow_small
valIndFromMflow.show_T
valIndFromMflow.dp
valIndFromMflow._m_flow_start
valIndFromMflow._dp_start
valIndFromMflow.from_dp
valIndFromMflow.dp_nominal
valIndFromMflow.homotopyInitialization
valIndFromMflow.linearized
valIndFromMflow.m_flow_turbulent
valIndFromMflow.sta_default.p
valIndFromMflow.sta_default.T
valIndFromMflow.eta_default
valIndFromMflow.m_flow_nominal_pos
valIndFromMflow.dp_nominal_pos
valIndFromMflow.CvData
valIndFromMflow.Kv
valIndFromMflow.Cv
valIndFromMflow.Av
valIndFromMflow.deltaM
valIndFromMflow.dpValve_nominal
valIndFromMflow.rhoStd
valIndFromMflow.Kv_SI
valIndFromMflow.use_inputFilter
valIndFromMflow.riseTime
valIndFromMflow.order
valIndFromMflow.init
valIndFromMflow.y_start
valIndFromMflow.dpFixed_nominal
valIndFromMflow.l
valIndFromMflow.phi
valIndFromMflow.kFixed
valIndFromMflow.l2
valIndFromMflow.deltax
valIndFromMflow.coeff1
valIndFromMflow.coeff2
valIndFromMflow.y2dd
valIndFromMflow.dp_min
valIndFromMflow.dp_x
valIndFromMflow.dp_x1
valIndFromMflow.dp_x2
valIndFromMflow.dp_y2
valIndFromMflow.dp_y1
valIndFromMflow.m_flow_x
valIndFromMflow.m_flow_x1
valIndFromMflow.m_flow_y2
valIndFromMflow.m_flow_y1
valIndFromMflow.m_flow_smooth
valIndFromMflow.dp_smooth

double initialValue(196,6)
 -2       1                       0                       0                
  2     0   # _dummy
 -2       0                       0                       0                
  3     0   # _derdummy
 -1       1                       0                       0                
  1   280   # y.height
 -1       1                       0                 1.0000000000000000E+100
  1   280   # y.duration
 -1       0                       0                       0                
  1   280   # y.offset
 -1       0                       0                       0                
  1   280   # y.startTime
 -2       1                       0                       1                
  6   256   # y.y
 -2       3                       0                       0                
  6   258   # sou.nPorts
 -2       0                       0                       0                
  6   257   # sou.verifyInputs
 -2 -5.4772255750516619E-01 -100000                  9.9999999999999995E+59
  6   388   # sou.ports[1].m_flow
 -2  3.0300000000000000E+05       0                  1.0000000000000000E+08
  6   260   # sou.ports[1].p
 -2   83680                 -1.0000000000000000E+10  1.0000000000000000E+10
  6   260   # sou.ports[1].h_outflow
 -2 -4.4721359549995798E-01 -100000                  9.9999999999999995E+59
  6   388   # sou.ports[2].m_flow
 -2 -5.4772255750516607E-01 -100000                  9.9999999999999995E+59
  6   420   # sou.ports[3].m_flow
 -2       3                       1                       3                
  6  1282   # sou.flowDirection
 -2       1                       0                       0                
  6  1280   # sou.X_in_internal[1]
 -2       1                       0                       0                
  6   769   # sou.use_p_in
 -1  3.0000000000000000E+05       0                  1.0000000000000000E+08
  1   280   # sou.p
 -2       0                       0                       0                
  6   769   # sou.use_T_in
 -1  2.9314999999999998E+02       1                   10000                
  1   280   # sou.T
 -2       0                       0                       0                
  6   769   # sou.use_X_in
 -2       0                       0                       0                
  6   769   # sou.use_Xi_in
 -2       0                       0                       0                
  6   769   # sou.use_C_in
 -1       1                       0                       1                
  1   280   # sou.X[1]
 -2       3                       0                       0                
  6   258   # sin.nPorts
 -2       0                       0                       0                
  6   257   # sin.verifyInputs
 -2   83680                 -1.0000000000000000E+10  1.0000000000000000E+10
  6   260   # sin.ports[1].h_outflow
 -2       3                       1                       3                
  6  1282   # sin.flowDirection
 -2       1                       0                       0                
  6  1280   # sin.X_in_internal[1]
 -2       0                       0                       0                
  6   769   # sin.use_p_in
 -1  3.0000000000000000E+05       0                  1.0000000000000000E+08
  1   280   # sin.p
 -2       0                       0                       0                
  6   769   # sin.use_T_in
 -1  2.9314999999999998E+02       1                   10000                
  1   280   # sin.T
 -2       0                       0                       0                
  6   769   # sin.use_X_in
 -2       0                       0                       0                
  6   769   # sin.use_Xi_in
 -2       0                       0                       0                
  6   769   # sin.use_C_in
 -1       1                       0                       1                
  1   280   # sin.X[1]
 -2       1                       0                       0                
  6   257   # valInd.allowFlowReversal
 -2       1                       0                       0                
  6   256   # valInd.m_flow_nominal
 -2  1.0000000000000000E-04       0                 1.0000000000000000E+100
  6   256   # valInd.m_flow_small
 -2       0                       0                       0                
  6   257   # valInd.show_T
 -2    3000                       0                       0                
  6   256   # valInd.dp
 -2       0                       0                       0                
  6  1280   # valInd._m_flow_start
 -2       0                       0                       0                
  6  1280   # valInd._dp_start
 -2       1                       0                       0                
  6   257   # valInd.from_dp
 -2   10000                       0                       0                
  6   256   # valInd.dp_nominal
 -2       1                       0                       0                
  6   257   # valInd.homotopyInitialization
 -2       0                       0                       0                
  6   257   # valInd.linearized
 -2  2.0000000000000000E-02       0                 1.0000000000000000E+100
  6   256   # valInd.m_flow_turbulent
 -1  3.0000000000000000E+05       0                  1.0000000000000000E+08
  1  1304   # valInd.sta_default.p
 -1  2.9314999999999998E+02       1                   10000                
  1  1304   # valInd.sta_default.T
 -2  1.0000000000000000E-03       0                 1.0000000000000000E+100
  6  1280   # valInd.eta_default
 -2       1                       0                       0                
  6  1280   # valInd.m_flow_nominal_pos
 -2   10000                       0                       0                
  6  1280   # valInd.dp_nominal_pos
 -2       1                       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialPureSubstance.X_default[1]
 -2       1                       1                       4                
  6   258   # valInd.CvData
 -2  1.1434672219784295E+01       0                       0                
  6   256   # valInd.Kv
 -2  1.3217794487765211E+01       0                       0                
  6   256   # valInd.Cv
 -2  3.1692799967453109E-04       0                       0                
  6   256   # valInd.Av
 -1  2.0000000000000000E-02       0                       0                
  1   280   # valInd.deltaM
 -1   10000                       0                 1.0000000000000000E+100
  1   280   # valInd.dpValve_nominal
 -1  9.9558600000000001E+02       0                 1.0000000000000000E+100
  1   280   # valInd.rhoStd
 -2  1.0000000000000000E-02  9.9999999999999997E-61 1.0000000000000000E+100
  6  1280   # valInd.Kv_SI
 -2       0                       0                       0                
  6   257   # valInd.use_inputFilter
 -1     120                       0                       0                
  1   280   # valInd.riseTime
 -1       2                       1                 1.0000000000000000E+100
  1   282   # valInd.order
 -1       4                       1                       4                
  1   282   # valInd.init
 -1       1                       0                       0                
  1   280   # valInd.y_start
 -2       0                       0                 1.0000000000000000E+100
  6   256   # valInd.dpFixed_nominal
 -1  5.0000000000000003E-02  1.0000000000000000E-10       1                
  1   280   # valInd.l
 -2       1                       0                       0                
  6   256   # valInd.phi
 -2       0                       0                 1.0000000000000000E+100
  6   256   # valInd.kFixed
 -1  1.0000000000000001E-01  1.0000000000000000E-10 1.0000000000000000E+100
  1   280   # valInd.l2
 -1  2.0000000000000000E-02       0                       0                
  1   280   # valInd.deltax
 -2  1.0000000000000001E-05       0                       0                
  6  1280   # valInd.coeff1
 -2  9.9999999999999985E+04       0                       0                
  6  1280   # valInd.coeff2
 -2       0                       0                       0                
  6  1280   # valInd.y2dd
 -2   10000                       0                       0                
  6  1280   # valInd.dp_min
 -2   -7000                       0                       0                
  6  1280   # valInd.dp_x
 -2    -200                       0                       0                
  6  1280   # valInd.dp_x1
 -2       0                       0                       0                
  6  1280   # valInd.dp_y2
 -2       0                       0                       0                
  6  1280   # valInd.dp_y1
 -2       0                       0                       0                
  6  1280   # valInd.m_flow_x
 -2       0                       0                       0                
  6  1280   # valInd.m_flow_x1
 -2       0                       0                       0                
  6  1280   # valInd.m_flow_x2
 -2  1.0020000000000000E+00       0                       0                
  6  1280   # valInd.m_flow_y2
 -2  5.4772255750516619E-01       0                       0                
  6  1280   # valInd.m_flow_y1
 -2  5.4772255750516619E-01       0                       0                
  6  1280   # valInd.m_flow_smooth
 -2       0                       0                       0                
  6  1280   # valInd.dp_smooth
 -1   12000                       0                       0                
  1   280   # dp.height
 -1       1                       0                 1.0000000000000000E+100
  1   280   # dp.duration
 -1  3.0300000000000000E+05       0                       0                
  1   280   # dp.offset
 -1       1                       0                       0                
  1   280   # dp.startTime
 -2       1                       0                       0                
  6   257   # valIndDpFix.allowFlowReversal
 -2       1                       0                       0                
  6   256   # valIndDpFix.m_flow_nominal
 -2  1.0000000000000000E-04       0                 1.0000000000000000E+100
  6   256   # valIndDpFix.m_flow_small
 -2       0                       0                       0                
  6   257   # valIndDpFix.show_T
 -2    3000                       0                       0                
  6   256   # valIndDpFix.dp
 -2       0                       0                       0                
  6  1280   # valIndDpFix._m_flow_start
 -2       0                       0                       0                
  6  1280   # valIndDpFix._dp_start
 -2       1                       0                       0                
  6   257   # valIndDpFix.from_dp
 -2   15000                       0                       0                
  6   256   # valIndDpFix.dp_nominal
 -2       1                       0                       0                
  6   257   # valIndDpFix.homotopyInitialization
 -2       0                       0                       0                
  6   257   # valIndDpFix.linearized
 -2  2.0000000000000000E-02       0                 1.0000000000000000E+100
  6   256   # valIndDpFix.m_flow_turbulent
 -1  3.0000000000000000E+05       0                  1.0000000000000000E+08
  1  1304   # valIndDpFix.sta_default.p
 -1  2.9314999999999998E+02       1                   10000                
  1  1304   # valIndDpFix.sta_default.T
 -2  1.0000000000000000E-03       0                 1.0000000000000000E+100
  6  1280   # valIndDpFix.eta_default
 -2       1                       0                       0                
  6  1280   # valIndDpFix.m_flow_nominal_pos
 -2   15000                       0                       0                
  6  1280   # valIndDpFix.dp_nominal_pos
 -2       1                       1                       4                
  6   258   # valIndDpFix.CvData
 -2  1.1434672219784295E+01       0                       0                
  6   256   # valIndDpFix.Kv
 -2  1.3217794487765211E+01       0                       0                
  6   256   # valIndDpFix.Cv
 -2  3.1692799967453109E-04       0                       0                
  6   256   # valIndDpFix.Av
 -1  2.0000000000000000E-02       0                       0                
  1   280   # valIndDpFix.deltaM
 -1   10000                       0                 1.0000000000000000E+100
  1   280   # valIndDpFix.dpValve_nominal
 -1  9.9558600000000001E+02       0                 1.0000000000000000E+100
  1   280   # valIndDpFix.rhoStd
 -2  1.0000000000000000E-02  9.9999999999999997E-61 1.0000000000000000E+100
  6  1280   # valIndDpFix.Kv_SI
 -2       0                       0                       0                
  6   257   # valIndDpFix.use_inputFilter
 -1     120                       0                       0                
  1   280   # valIndDpFix.riseTime
 -1       2                       1                 1.0000000000000000E+100
  1   282   # valIndDpFix.order
 -1       4                       1                       4                
  1   282   # valIndDpFix.init
 -1       1                       0                       0                
  1   280   # valIndDpFix.y_start
 -2    5000                       0                 1.0000000000000000E+100
  6   256   # valIndDpFix.dpFixed_nominal
 -1  5.0000000000000003E-02  1.0000000000000000E-10       1                
  1   280   # valIndDpFix.l
 -2       1                       0                       0                
  6   256   # valIndDpFix.phi
 -2  1.4142135623730951E-02       0                 1.0000000000000000E+100
  6   256   # valIndDpFix.kFixed
 -2  8.1649658092772612E-03  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # valIndDpFix.k
 -1  1.0000000000000001E-01  1.0000000000000000E-10 1.0000000000000000E+100
  1   280   # valIndDpFix.l2
 -1  2.0000000000000000E-02       0                       0                
  1   280   # valIndDpFix.deltax
 -2  6.6666666666666666E-06       0                       0                
  6  1280   # valIndDpFix.coeff1
 -2  1.5000000000000000E+05       0                       0                
  6  1280   # valIndDpFix.coeff2
 -2       0                       0                       0                
  6  1280   # valIndDpFix.y2dd
 -2  1.4999999999999998E+04       0                       0                
  6  1280   # valIndDpFix.dp_min
 -2 -1.1999999999999998E+04       0                       0                
  6  1280   # valIndDpFix.dp_x
 -2 -2.9999999999999994E+02       0                       0                
  6  1280   # valIndDpFix.dp_x1
 -2       0                       0                       0                
  6  1280   # valIndDpFix.dp_y2
 -2       0                       0                       0                
  6  1280   # valIndDpFix.dp_y1
 -2       0                       0                       0                
  6  1280   # valIndDpFix.m_flow_x
 -2       0                       0                       0                
  6  1280   # valIndDpFix.m_flow_x1
 -2       0                       0                       0                
  6  1280   # valIndDpFix.m_flow_x2
 -2  1.0020000000000000E+00       0                       0                
  6  1280   # valIndDpFix.m_flow_y2
 -2  4.4721359549995798E-01       0                       0                
  6  1280   # valIndDpFix.m_flow_y1
 -2  4.4721359549995798E-01       0                       0                
  6  1280   # valIndDpFix.m_flow_smooth
 -2       0                       0                       0                
  6  1280   # valIndDpFix.dp_smooth
 -2       1                       0                       0                
  6   257   # valIndFromMflow.allowFlowReversal
 -2       1                       0                       0                
  6   256   # valIndFromMflow.m_flow_nominal
 -2  1.0000000000000000E-04       0                 1.0000000000000000E+100
  6   256   # valIndFromMflow.m_flow_small
 -2       0                       0                       0                
  6   257   # valIndFromMflow.show_T
 -2    3000                       0                       0                
  6   256   # valIndFromMflow.dp
 -2       0                       0                       0                
  6  1280   # valIndFromMflow._m_flow_start
 -2       0                       0                       0                
  6  1280   # valIndFromMflow._dp_start
 -2       0                       0                       0                
  6   257   # valIndFromMflow.from_dp
 -2   10000                       0                       0                
  6   256   # valIndFromMflow.dp_nominal
 -2       1                       0                       0                
  6   257   # valIndFromMflow.homotopyInitialization
 -2       0                       0                       0                
  6   257   # valIndFromMflow.linearized
 -2  2.0000000000000000E-02       0                 1.0000000000000000E+100
  6   256   # valIndFromMflow.m_flow_turbulent
 -1  3.0000000000000000E+05       0                  1.0000000000000000E+08
  1  1304   # valIndFromMflow.sta_default.p
 -1  2.9314999999999998E+02       1                   10000                
  1  1304   # valIndFromMflow.sta_default.T
 -2  1.0000000000000000E-03       0                 1.0000000000000000E+100
  6  1280   # valIndFromMflow.eta_default
 -2       1                       0                       0                
  6  1280   # valIndFromMflow.m_flow_nominal_pos
 -2   10000                       0                       0                
  6  1280   # valIndFromMflow.dp_nominal_pos
 -2       1                       1                       4                
  6   258   # valIndFromMflow.CvData
 -2  1.1434672219784295E+01       0                       0                
  6   256   # valIndFromMflow.Kv
 -2  1.3217794487765211E+01       0                       0                
  6   256   # valIndFromMflow.Cv
 -2  3.1692799967453109E-04       0                       0                
  6   256   # valIndFromMflow.Av
 -1  2.0000000000000000E-02       0                       0                
  1   280   # valIndFromMflow.deltaM
 -1   10000                       0                 1.0000000000000000E+100
  1   280   # valIndFromMflow.dpValve_nominal
 -1  9.9558600000000001E+02       0                 1.0000000000000000E+100
  1   280   # valIndFromMflow.rhoStd
 -2  1.0000000000000000E-02  9.9999999999999997E-61 1.0000000000000000E+100
  6  1280   # valIndFromMflow.Kv_SI
 -2       0                       0                       0                
  6   257   # valIndFromMflow.use_inputFilter
 -1     120                       0                       0                
  1   280   # valIndFromMflow.riseTime
 -1       2                       1                 1.0000000000000000E+100
  1   282   # valIndFromMflow.order
 -1       4                       1                       4                
  1   282   # valIndFromMflow.init
 -1       1                       0                       0                
  1   280   # valIndFromMflow.y_start
 -2       0                       0                 1.0000000000000000E+100
  6   256   # valIndFromMflow.dpFixed_nominal
 -1  5.0000000000000003E-02  1.0000000000000000E-10       1                
  1   280   # valIndFromMflow.l
 -2       1                       0                       0                
  6   256   # valIndFromMflow.phi
 -2       0                       0                 1.0000000000000000E+100
  6   256   # valIndFromMflow.kFixed
 -1  1.0000000000000001E-01  1.0000000000000000E-10 1.0000000000000000E+100
  1   280   # valIndFromMflow.l2
 -1  2.0000000000000000E-02       0                       0                
  1   280   # valIndFromMflow.deltax
 -2  1.0000000000000001E-05       0                       0                
  6  1280   # valIndFromMflow.coeff1
 -2  9.9999999999999985E+04       0                       0                
  6  1280   # valIndFromMflow.coeff2
 -2       0                       0                       0                
  6  1280   # valIndFromMflow.y2dd
 -2   10000                       0                       0                
  6  1280   # valIndFromMflow.dp_min
 -2       0                       0                       0                
  6  1280   # valIndFromMflow.dp_x
 -2       0                       0                       0                
  6  1280   # valIndFromMflow.dp_x1
 -2       0                       0                       0                
  6  1280   # valIndFromMflow.dp_x2
 -2   12000                       0                       0                
  6  1280   # valIndFromMflow.dp_y2
 -2  2.9999999999999995E+03       0                       0                
  6  1280   # valIndFromMflow.dp_y1
 -2 -4.5227744249483393E-01       0                       0                
  6  1280   # valIndFromMflow.m_flow_x
 -2 -2.0000000000000000E-02       0                       0                
  6  1280   # valIndFromMflow.m_flow_x1
 -2       0                       0                       0                
  6  1280   # valIndFromMflow.m_flow_y2
 -2       0                       0                       0                
  6  1280   # valIndFromMflow.m_flow_y1
 -2       0                       0                       0                
  6  1280   # valIndFromMflow.m_flow_smooth
 -2    3000                       0                       0                
  6  1280   # valIndFromMflow.dp_smooth


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(196,124)
dummy
derdummy
Height of ramps
Duration of ramp (= 0.0 gives a Step) [s]
Offset of output signal
Output = offset for time < startTime [s]
Connector of Real output signal
Number of ports [:#(type=Integer)]
Set to true to stop the simulation with an error if the medium temperature is outside its allowable range [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Needed to connect to conditional connector [kg/kg]
Get the pressure from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Get the temperature from the input connector [:#(type=Boolean)]
Fixed value of temperature [K|degC]
Get the composition (all fractions) from the input connector [:#(type=Boolean)]
Get the composition (independent fractions) from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of composition [kg/kg]
Number of ports [:#(type=Integer)]
Set to true to stop the simulation with an error if the medium temperature is outside its allowable range [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Needed to connect to conditional connector [kg/kg]
Get the pressure from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|Pa]
Get the temperature from the input connector [:#(type=Boolean)]
Fixed value of temperature [K|degC]
Get the composition (all fractions) from the input connector [:#(type=Boolean)]
Get the composition (independent fractions) from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of composition [kg/kg]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Default value for mass fractions of medium (for initialization) [kg/kg]
Selection of flow coefficient [:#(type=AixLib.Fluid.Types.CvTypes)]
Kv (metric) flow coefficient [m3/h/(bar)^(1/2)] []
Cv (US) flow coefficient [USG/min/(psi)^(1/2)] []
Av (metric) flow coefficient [m2]
Fraction of nominal flow rate where linearization starts, if y=1 [1]
Nominal pressure drop of fully open valve, used if CvData=AixLib.Fluid.Types.CvTypes.OpPoint [Pa|Pa]
Inlet density for which valve coefficients are defined [kg/m3|g/cm3]
Flow coefficient for fully open valve in SI units, Kv=m_flow/sqrt(dp) [kg/s/(Pa)^(1/2)] []
= true, if opening is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of an opening step) [s]
Order of filter [:#(type=Integer)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of output
Pressure drop of pipe and other resistances that are in series [Pa|Pa]
Valve leakage, l=Kv(y=0)/Kv(y=1) [1]
Ratio actual to nominal mass flow rate of valve, phi=Kv(y)/Kv(y=1) [1]
Flow coefficient of fixed resistance that may be in series with valve, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2).
Gain for mass flow increase if pressure is above nominal pressure [1]
Transition interval for flow rate [1]
Parameter for avoiding unnecessary computations [m.s]
Parameter for avoiding unnecessary computations [m-1.s-1]
Second derivative at second support point
Minimum pressure difference required for delivering requested mass flow rate [Pa|Pa]
[Pa|bar]
[Pa|bar]
[Pa|bar]
Support points for interpolation flow functions [Pa|bar]
[kg/s]
[kg/s]
[kg/s]
[kg/s]
Support points for interpolation flow functions [kg/s]
Smooth interpolation result between two flow regimes [kg/s]
Smooth interpolation result between two flow regimes [Pa|bar]
Height of ramps [Pa]
Duration of ramp (= 0.0 gives a Step) [s]
Offset of output signal [Pa]
Output = offset for time < startTime [s]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Selection of flow coefficient [:#(type=AixLib.Fluid.Types.CvTypes)]
Kv (metric) flow coefficient [m3/h/(bar)^(1/2)] []
Cv (US) flow coefficient [USG/min/(psi)^(1/2)] []
Av (metric) flow coefficient [m2]
Fraction of nominal flow rate where linearization starts, if y=1 [1]
Nominal pressure drop of fully open valve, used if CvData=AixLib.Fluid.Types.CvTypes.OpPoint [Pa|Pa]
Inlet density for which valve coefficients are defined [kg/m3|g/cm3]
Flow coefficient for fully open valve in SI units, Kv=m_flow/sqrt(dp) [kg/s/(Pa)^(1/2)] []
= true, if opening is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of an opening step) [s]
Order of filter [:#(type=Integer)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of output
Pressure drop of pipe and other resistances that are in series [Pa|Pa]
Valve leakage, l=Kv(y=0)/Kv(y=1) [1]
Ratio actual to nominal mass flow rate of valve, phi=Kv(y)/Kv(y=1) [1]
Flow coefficient of fixed resistance that may be in series with valve, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2).
Flow coefficient of valve and pipe in series, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2).
Gain for mass flow increase if pressure is above nominal pressure [1]
Transition interval for flow rate [1]
Parameter for avoiding unnecessary computations [m.s]
Parameter for avoiding unnecessary computations [m-1.s-1]
Second derivative at second support point
Minimum pressure difference required for delivering requested mass flow rate [Pa|Pa]
[Pa|bar]
[Pa|bar]
[Pa|bar]
Support points for interpolation flow functions [Pa|bar]
[kg/s]
[kg/s]
[kg/s]
[kg/s]
Support points for interpolation flow functions [kg/s]
Smooth interpolation result between two flow regimes [kg/s]
Smooth interpolation result between two flow regimes [Pa|bar]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Selection of flow coefficient [:#(type=AixLib.Fluid.Types.CvTypes)]
Kv (metric) flow coefficient [m3/h/(bar)^(1/2)] []
Cv (US) flow coefficient [USG/min/(psi)^(1/2)] []
Av (metric) flow coefficient [m2]
Fraction of nominal flow rate where linearization starts, if y=1 [1]
Nominal pressure drop of fully open valve, used if CvData=AixLib.Fluid.Types.CvTypes.OpPoint [Pa|Pa]
Inlet density for which valve coefficients are defined [kg/m3|g/cm3]
Flow coefficient for fully open valve in SI units, Kv=m_flow/sqrt(dp) [kg/s/(Pa)^(1/2)] []
= true, if opening is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of an opening step) [s]
Order of filter [:#(type=Integer)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of output
Pressure drop of pipe and other resistances that are in series [Pa|Pa]
Valve leakage, l=Kv(y=0)/Kv(y=1) [1]
Ratio actual to nominal mass flow rate of valve, phi=Kv(y)/Kv(y=1) [1]
Flow coefficient of fixed resistance that may be in series with valve, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2).
Gain for mass flow increase if pressure is above nominal pressure [1]
Transition interval for flow rate [1]
Parameter for avoiding unnecessary computations [m.s]
Parameter for avoiding unnecessary computations [m-1.s-1]
Second derivative at second support point
Minimum pressure difference required for delivering requested mass flow rate [Pa|Pa]
[Pa|bar]
[Pa|bar]
[Pa|bar]
[Pa|bar]
Support points for interpolation flow functions [Pa|bar]
[kg/s]
[kg/s]
[kg/s]
Support points for interpolation flow functions [kg/s]
Smooth interpolation result between two flow regimes [kg/s]
Smooth interpolation result between two flow regimes [Pa|bar]

